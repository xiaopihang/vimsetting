"#
"# mkdir -p ~/.vim/bundle
"# git clone https://github.com/Shougo/neobundle.vim ~/.vim/bundle/neobundle.vim
"# git clone https://github.com/Shougo/vimproc ~/.vim/bundle/vimprocvimrc# 
"# :NeoBundleInstall
"#

"---------------------------------
" set options
"---------------------------------
set nocompatible                 " vi互換にしない
"set ffs=unix                    " 改行コードをLFにする(default: unix,dos)
set noinsertmode                 " デフォルトモードをインサートにしない
set wrap                         " 行の端まで到達したら折り返す
set nolinebreak                  " ホワイト・スペースで折り返さない
set formatoptions=q              " gq コマンド以外では自動改行しない
set backspace=1                  " 全て Backspace で削除可能にする
set autoindent                  " オートインデント
set noerrorbells                 " エラー時にベルを鳴らさない
set novisualbell                 " ヴィジュアルベルを使わない
set cmdheight=1                  " コマンドラインの高さ
set shortmess=t                  " 'Press RETURN or enter command to continue' を表示しない
set history=50                   " 記憶するコマンド数
"set number                       " 行番号を表示
set showmode                     "
set wildmenu                     " コマンド入力中の補完候補をステータスラインに表示
set wildignore=*.o,*.so          " 補完候補から除外するファイル
set tabstop=4                    " タブ幅
set shiftwidth=4                 " インデント幅
set smarttab                     "
set noexpandtab                  " オートインデント時に挿入タブをスペースに変換しない?
set ruler                        " ルーラーを表示
set showcmd                      " 実行したコマンドを表示
set showmatch                    " 対応する括弧に一時的に移動
"set title                       " タイトルを表示
set laststatus=2                 " 常にステータス行を表示
"set ignorecase                  " 大文字小文字を無視
set smartcase                    " 検索キーワードに大文字が含まれていれば大文字小文字を区別
set hlsearch                     " 検索キーワードをハイライトする
set wrapscan                     " ファイルの最後に来たら最初から検索
set magic                        " 正規表現使用時に magic モードにする
set list                         " タブや改行などを別の文字で表示する
set listchars=tab:-\ ,extends:<  " タブや改行などの代替文字設定 (ex. tab:>-,extends:<,trail:-,eol:< )
set keywordprg=man\ -a           " キーワードヘルプコマンドの設定 (default: man or man\ -s)
set lazyredraw                  " マクロ実行中は画面を更新しない
set statusline=%<%f\ %m%r%h%w%y%{'['.(&fenc!=''?&fenc:&enc).']['.&ff.']'}%=%b\ 0x%B\ \ %l,%c%V%8P
                                 " ステータス行のフォーマット
set cursorline                   " カーソル行に下線を表示 (* vim7)
"set cursorcolumn                " カーソル列をハイライト (* vim7)
set viminfo='100,f1,<100,:100,@100,/100,!,h
set foldmethod=marker            " foldingを指定
set nrformats=""                 " 数値インクリメント時に8進数扱いしない

"---------------------------------
" syntax
"---------------------------------
syntax on
highlight Search ctermbg=Green ctermfg=Black
highlight Error ctermfg=Black


" □とか○の文字があってもカーソル位置がずれないようにする
if exists('&ambiwidth')
        set ambiwidth=double
endif


"---------------------------------
" neobundle
"---------------------------------
"set nocompatible               " be iMproved  8行に設定されている 
filetype off

if has('vim_starting')
    set runtimepath+=~/.vim/bundle/neobundle.vim
	call neobundle#rc(expand('~/.vim/bundle'))
endif

NeoBundle 'Shougo/neobundle.vim'
NeoBundle 'Shougo/vimproc'
NeoBundle 'Shougo/vimshell'
NeoBundle 'Shougo/unite.vim'
" add on 20130710
NeoBundle 'kana/vim-gf-user'
NeoBundle 'Shougo/neocomplcache'
NeoBundle 'Shougo/neosnippet'
NeoBundle 'Shougo/vimfiler'

NeoBundle 'VimClojure'
NeoBundle 'jpalardy/vim-slime'
NeoBundle 'scrooloose/syntastic'
NeoBundle 'tpope/vim-fugitive'
NeoBundle 'rstacruz/sparkup', {'rtp': 'vim/'}
NeoBundle 'tsukkee/unite-tag'
NeoBundle 'thinca/vim-quickrun'
NeoBundle 'fuenor/qfixgrep.git'
NeoBundle 'glidenote/memolist.vim'
NeoBundle 'mattn/webapi-vim'
NeoBundle 'mattn/gist-vim'
NeoBundle 'vim-scripts/sudo.vim'
NeoBundle 'JavaScript-syntax'
NeoBundle 'jiangmiao/simple-javascript-indenter'

" perl
NeoBundle 'petdance/vim-perl'
NeoBundle 'hotchpotch/perldoc-vim'

" www.vim.org
NeoBundle 'L9'
NeoBundle 'FuzzyFinder'
NeoBundle 'rails.vim'
NeoBundle 'Source-Explorer-srcexpl.vim'

" others
NeoBundle 'git://git.wincent.com/command-t.git'
NeoBundle 'Lokaltog/vim-powerline'

" php-class
NeoBundle 'violetyk/vim-phpclass'

let g:phpclass_dir = {
			\ '/home/lin/svn/stats/share/stats/application/modules/stats/models/' : 'phpclass#camelize'
			\ }

filetype plugin indent on     " Required!

" Installation check.
NeoBundleCheck

"
"" unite.vim
"
"
" 入力モードで開始する
" let g:unite_enable_start_insert=1
" バッファ一覧
nnoremap <silent> <C-i><C-u> :<C-u>Unite buffer<CR>
" ファイル一覧
nnoremap <silent> <C-i><C-f> :<C-u>UniteWithBufferDir -buffer-name=files file<CR>
" レジスタ一覧
nnoremap <silent> <C-i><C-r> :<C-u>Unite -buffer-name=register register<CR>
" 最近使用したファイル一覧
nnoremap <silent> <C-i><C-m> :<C-u>Unite file_mru<CR>
" 常用セット
nnoremap <silent> <C-i><C-i> :<C-u>Unite buffer file_mru<CR>
" 全部乗せ
nnoremap <silent> <C-i><C-a> :<C-u>UniteWithBufferDir -buffer-name=files buffer file_mru bookmark file<CR>

"---------------------------------
" neocomplcache
"---------------------------------
" Use neocomplcache.
let g:neocomplcache_enable_at_startup = 1
let g:neosnippet#snippets_directory='~/.vim/bundle/vim-snippets/snippets'

"---------------------------------
" map
"---------------------------------
" バッファ移動
map <F2> <ESC>:bp<CR>
map <F3> <ESC>:bn<CR>
map <F4> <ESC>:bw<CR>
" diffsplit したときデフォルトでno wrapなので必要なら使う
map <F5> <ESC>:set wrap<CR>
" カレントファイルの文字コードを変更する
map <F7>e <ESC>:set fileencoding=euc-jp<CR>
map <F7>s <ESC>:set fileencoding=cp932<CR>
map <F7>u <ESC>:set fileencoding=utf8<CR>
map <F7>n <ESC>:set fileformat=unix<CR>
map <F7>r <ESC>:set fileformat=dos<CR>
" カレントファイルを指定文字コードで読み直す
map <F8>e <ESC>:e ++enc=euc-jp<CR>
map <F8>s <ESC>:e ++enc=cp932<CR>
map <F8>u <ESC>:e ++enc=utf8<CR>
" Shift-K で使う辞書設定
map <F9>m <ESC>:set keywordprg=man\ -a<CR>
map <F9>pm <ESC>:set keywordprg=perldoc<CR>
map <F9>pf <ESC>:set keywordprg=perldoc\ -f<CR>
map <F9>d <ESC>:set keywordprg=dic<CR>
map <F9>j <ESC>:set keywordprg=dic\ -j<CR>
map <F9>e <ESC>:set keywordprg=eword<CR>
" 翻訳する(先にv/Vで範囲指定する)
map <F10> :w !trans -d<CR>
" マウス有効無効設定
map <F11> <ESC>:set mouse=a<CR>
map <F12> <ESC>:set mouse=<CR>
" 折り返し行関係なく上下移動する
nnoremap j gj
nnoremap k gk
" 分割ウィンドウの移動
"map <Right> <c-w>l
"map <Left> <c-w>h
"map <Up> <c-w>k
"map <Down> <c-w>j
" 分割ウィンドウのサイズ変更
map <Right> <c-w>>
map <Left> <c-w><
map <Up> <c-w>-
map <Down> <c-w>+
"map <kPlus> <C-W>+
"map <kMinus> <C-W>-
"map <kDivide> <c-w><
"map <kMultiply> <c-w>>
" カーソル位置キーワードをカレントディレクトリファイルからgrep...?
"map _g :let efsave=&ef<Bar>let &ef=tempname()<Bar>exe ':!grep -n -w "<cword>" * >'.&ef<CR>:cf<CR>:exe ":!rm ".&ef<CR>:let &ef=efsave<Bar>unlet efsave<CR><CR>:cc<CR>
